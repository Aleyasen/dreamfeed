<?php

/**
 * This is the model base class for the table "note".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Note".
 *
 * Columns in table "note" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $goal_id
 * @property string $created_timestamp
 * @property string $activity
 * @property string $result
 * @property integer $result_type
 * @property integer $user
 *
 */
abstract class BaseNote extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'note';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Note|Notes', $n);
	}

	public static function representingColumn() {
		return 'created_timestamp';
	}

	public function rules() {
		return array(
			array('id, goal_id, created_timestamp, activity, result, result_type, user', 'required'),
			array('id, goal_id, result_type, user', 'numerical', 'integerOnly'=>true),
			array('activity, result', 'length', 'max'=>2048),
			array('id, goal_id, created_timestamp, activity, result, result_type, user', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'goal_id' => Yii::t('app', 'Goal'),
			'created_timestamp' => Yii::t('app', 'Created Timestamp'),
			'activity' => Yii::t('app', 'Activity'),
			'result' => Yii::t('app', 'Result'),
			'result_type' => Yii::t('app', 'Result Type'),
			'user' => Yii::t('app', 'User'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('goal_id', $this->goal_id);
		$criteria->compare('created_timestamp', $this->created_timestamp, true);
		$criteria->compare('activity', $this->activity, true);
		$criteria->compare('result', $this->result, true);
		$criteria->compare('result_type', $this->result_type);
		$criteria->compare('user', $this->user);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}